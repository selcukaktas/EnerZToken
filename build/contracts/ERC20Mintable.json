{
  "contractName": "ERC20Mintable",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526100163364010000000061001b810204565b6100f8565b6100336003826401000000006108de61006a82021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b600160a060020a038116151561007f57600080fd5b61009282826401000000006100c1810204565b1561009c57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a03821615156100d857600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b6109a4806101076000396000f3fe6080604052600436106100c45763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100c957806318160ddd1461011657806323b872dd1461013d57806339509351146101805780633eaaf86b146101b957806340c10f19146101ce57806370a0823114610207578063983b2d561461023a578063986502751461026f578063a457c2d714610284578063a9059cbb146102bd578063aa271e1a146102f6578063dd62ed3e14610329575b600080fd5b3480156100d557600080fd5b50610102600480360360408110156100ec57600080fd5b50600160a060020a038135169060200135610364565b604080519115158252519081900360200190f35b34801561012257600080fd5b5061012b6103e2565b60408051918252519081900360200190f35b34801561014957600080fd5b506101026004803603606081101561016057600080fd5b50600160a060020a038135811691602081013590911690604001356103e8565b34801561018c57600080fd5b50610102600480360360408110156101a357600080fd5b50600160a060020a0381351690602001356104b1565b3480156101c557600080fd5b5061012b610561565b3480156101da57600080fd5b50610102600480360360408110156101f157600080fd5b50600160a060020a038135169060200135610567565b34801561021357600080fd5b5061012b6004803603602081101561022a57600080fd5b5035600160a060020a0316610590565b34801561024657600080fd5b5061026d6004803603602081101561025d57600080fd5b5035600160a060020a03166105ab565b005b34801561027b57600080fd5b5061026d6105cb565b34801561029057600080fd5b50610102600480360360408110156102a757600080fd5b50600160a060020a0381351690602001356105d6565b3480156102c957600080fd5b50610102600480360360408110156102e057600080fd5b50600160a060020a038135169060200135610621565b34801561030257600080fd5b506101026004803603602081101561031957600080fd5b5035600160a060020a031661062e565b34801561033557600080fd5b5061012b6004803603604081101561034c57600080fd5b50600160a060020a0381358116916020013516610647565b6000600160a060020a038316151561037b57600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a038316600090815260016020908152604080832033845290915281205461041c908363ffffffff61067216565b600160a060020a038516600090815260016020908152604080832033845290915290205561044b848484610687565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000600160a060020a03831615156104c857600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546104fc908363ffffffff61075416565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60025481565b60006105723361062e565b151561057d57600080fd5b610587838361076d565b50600192915050565b600160a060020a031660009081526020819052604090205490565b6105b43361062e565b15156105bf57600080fd5b6105c881610817565b50565b6105d43361085f565b565b6000600160a060020a03831615156105ed57600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546104fc908363ffffffff61067216565b6000610587338484610687565b600061064160038363ffffffff6108a716565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561068157600080fd5b50900390565b600160a060020a038216151561069c57600080fd5b600160a060020a0383166000908152602081905260409020546106c5908263ffffffff61067216565b600160a060020a0380851660009081526020819052604080822093909355908416815220546106fa908263ffffffff61075416565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561076657600080fd5b9392505050565b600160a060020a038216151561078257600080fd5b600254610795908263ffffffff61075416565b600255600160a060020a0382166000908152602081905260409020546107c1908263ffffffff61075416565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b61082860038263ffffffff6108de16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61087060038263ffffffff61092c16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a03821615156108be57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a03811615156108f357600080fd5b6108fd82826108a7565b1561090757600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561094157600080fd5b61094b82826108a7565b151561095657600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a723058206d11a93450d4fbcf68c85d244a901c8ba9ceaa83fb515553bb610e1238c26d330029",
  "deployedBytecode": "0x6080604052600436106100c45763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100c957806318160ddd1461011657806323b872dd1461013d57806339509351146101805780633eaaf86b146101b957806340c10f19146101ce57806370a0823114610207578063983b2d561461023a578063986502751461026f578063a457c2d714610284578063a9059cbb146102bd578063aa271e1a146102f6578063dd62ed3e14610329575b600080fd5b3480156100d557600080fd5b50610102600480360360408110156100ec57600080fd5b50600160a060020a038135169060200135610364565b604080519115158252519081900360200190f35b34801561012257600080fd5b5061012b6103e2565b60408051918252519081900360200190f35b34801561014957600080fd5b506101026004803603606081101561016057600080fd5b50600160a060020a038135811691602081013590911690604001356103e8565b34801561018c57600080fd5b50610102600480360360408110156101a357600080fd5b50600160a060020a0381351690602001356104b1565b3480156101c557600080fd5b5061012b610561565b3480156101da57600080fd5b50610102600480360360408110156101f157600080fd5b50600160a060020a038135169060200135610567565b34801561021357600080fd5b5061012b6004803603602081101561022a57600080fd5b5035600160a060020a0316610590565b34801561024657600080fd5b5061026d6004803603602081101561025d57600080fd5b5035600160a060020a03166105ab565b005b34801561027b57600080fd5b5061026d6105cb565b34801561029057600080fd5b50610102600480360360408110156102a757600080fd5b50600160a060020a0381351690602001356105d6565b3480156102c957600080fd5b50610102600480360360408110156102e057600080fd5b50600160a060020a038135169060200135610621565b34801561030257600080fd5b506101026004803603602081101561031957600080fd5b5035600160a060020a031661062e565b34801561033557600080fd5b5061012b6004803603604081101561034c57600080fd5b50600160a060020a0381358116916020013516610647565b6000600160a060020a038316151561037b57600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a038316600090815260016020908152604080832033845290915281205461041c908363ffffffff61067216565b600160a060020a038516600090815260016020908152604080832033845290915290205561044b848484610687565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000600160a060020a03831615156104c857600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546104fc908363ffffffff61075416565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60025481565b60006105723361062e565b151561057d57600080fd5b610587838361076d565b50600192915050565b600160a060020a031660009081526020819052604090205490565b6105b43361062e565b15156105bf57600080fd5b6105c881610817565b50565b6105d43361085f565b565b6000600160a060020a03831615156105ed57600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546104fc908363ffffffff61067216565b6000610587338484610687565b600061064160038363ffffffff6108a716565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561068157600080fd5b50900390565b600160a060020a038216151561069c57600080fd5b600160a060020a0383166000908152602081905260409020546106c5908263ffffffff61067216565b600160a060020a0380851660009081526020819052604080822093909355908416815220546106fa908263ffffffff61075416565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561076657600080fd5b9392505050565b600160a060020a038216151561078257600080fd5b600254610795908263ffffffff61075416565b600255600160a060020a0382166000908152602081905260409020546107c1908263ffffffff61075416565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b61082860038263ffffffff6108de16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61087060038263ffffffff61092c16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a03821615156108be57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a03811615156108f357600080fd5b6108fd82826108a7565b1561090757600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561094157600080fd5b61094b82826108a7565b151561095657600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a723058206d11a93450d4fbcf68c85d244a901c8ba9ceaa83fb515553bb610e1238c26d330029",
  "sourceMap": "152:421:10:-;;;275:22:3;286:10;275;;;;:22;:::i;:::-;152:421:10;;685:119:3;741:21;:8;754:7;741:12;;;;;;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:3;;;;;;;;685:119;:::o;259:181:2:-;-1:-1:-1;;;;;335:21:2;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;;:18;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:2;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:2;429:4;406:27;;;259:181::o;786:162::-;858:4;-1:-1:-1;;;;;882:21:2;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:2;:11;:20;;;;;;;;;;;;;;;786:162::o;152:421:10:-;;;;;;;",
  "deployedSourceMap": "152:421:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2734:238:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2734:238:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2734:238:7;;;;;;;;;;;;;;;;;;;;;;;;;;;935:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;935:89:7;;;;;;;;;;;;;;;;;;;;3435:294;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3435:294:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3435:294:7;;;;;;;;;;;;;;;;;;4232:317;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4232:317:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4232:317:7;;;;;;;;;839:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;839:27:7;;;;443:128:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;443:128:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;443:128:10;;;;;;;;;1233:104:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1233:104:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1233:104:7;-1:-1:-1;;;;;1233:104:7;;;508:90:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;508:90:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;508:90:3;-1:-1:-1;;;;;508:90:3;;;;;604:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;604:75:3;;;;5057:327:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5057:327:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5057:327:7;;;;;;;;;1961:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1961:137:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1961:137:7;;;;;;;;;395:107:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;395:107:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;395:107:3;-1:-1:-1;;;;;395:107:3;;;1668:129:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1668:129:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1668:129:7;;;;;;;;;;;2734:238;2799:4;-1:-1:-1;;;;;2823:21:7;;;;2815:30;;;;;;2865:10;2856:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2856:29:7;;;;;;;;;;;;:37;;;2908:36;;;;;;;2856:29;;2865:10;2908:36;;;;;;;;;;;-1:-1:-1;2961:4:7;2734:238;;;;:::o;935:89::-;1005:12;;935:89;:::o;3435:294::-;-1:-1:-1;;;;;3559:14:7;;3514:4;3559:14;;;:8;:14;;;;;;;;3574:10;3559:26;;;;;;;;:37;;3590:5;3559:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3530:14:7;;;;;;:8;:14;;;;;;;;3545:10;3530:26;;;;;;;:66;3606:26;3539:4;3622:2;3626:5;3606:9;:26::i;:::-;-1:-1:-1;;;;;3647:54:7;;3674:14;;;;:8;:14;;;;;;;;3662:10;3674:26;;;;;;;;;;;3647:54;;;;;;;3662:10;;3647:54;;;;;;;;;;;;-1:-1:-1;3718:4:7;3435:294;;;;;:::o;4232:317::-;4312:4;-1:-1:-1;;;;;4336:21:7;;;;4328:30;;;;;;4410:10;4401:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4401:29:7;;;;;;;;;;:45;;4435:10;4401:45;:33;:45;:::i;:::-;4378:10;4369:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4369:29:7;;;;;;;;;;;;:77;;;4461:60;;;;;;4369:29;;4461:60;;;;;;;;;;;-1:-1:-1;4538:4:7;4232:317;;;;:::o;839:27::-;;;;:::o;443:128:10:-;511:4;350:20:3;359:10;350:8;:20::i;:::-;342:29;;;;;;;;527:16:10;533:2;537:5;527;:16::i;:::-;-1:-1:-1;560:4:10;443:128;;;;:::o;1233:104:7:-;-1:-1:-1;;;;;1314:16:7;1288:7;1314:16;;;;;;;;;;;;1233:104::o;508:90:3:-;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;;;572:19;583:7;572:10;:19::i;:::-;508:90;:::o;604:75::-;647:25;661:10;647:13;:25::i;:::-;604:75::o;5057:327:7:-;5142:4;-1:-1:-1;;;;;5166:21:7;;;;5158:30;;;;;;5240:10;5231:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5231:29:7;;;;;;;;;;:50;;5265:15;5231:50;:33;:50;:::i;1961:137::-;2022:4;2038:32;2048:10;2060:2;2064:5;2038:9;:32::i;395:107:3:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;:::-;467:28;395:107;-1:-1:-1;;395:107:3:o;1668:129:7:-;-1:-1:-1;;;;;1766:15:7;;;1740:7;1766:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1668:129::o;1205:145:6:-;1263:7;1290:6;;;;1282:15;;;;;;-1:-1:-1;1319:5:6;;;1205:145::o;5598:256:7:-;-1:-1:-1;;;;;5685:16:7;;;;5677:25;;;;;;-1:-1:-1;;;;;5731:15:7;;:9;:15;;;;;;;;;;;:26;;5751:5;5731:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5713:15:7;;;:9;:15;;;;;;;;;;;:44;;;;5783:13;;;;;;;:24;;5801:5;5783:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5767:13:7;;;:9;:13;;;;;;;;;;;;:40;;;;5822:25;;;;;;;5767:13;;5822:25;;;;;;;;;;;;;5598:256;;;:::o;1431:145:6:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:6:o;6197:263:7:-;-1:-1:-1;;;;;6271:21:7;;;;6263:30;;;;;;6319:12;;:23;;6336:5;6319:23;:16;:23;:::i;:::-;6304:12;:38;-1:-1:-1;;;;;6373:18:7;;:9;:18;;;;;;;;;;;:29;;6396:5;6373:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6352:18:7;;:9;:18;;;;;;;;;;;:50;;;;6417:36;;;;;;;6352:18;;:9;;6417:36;;;;;;;;;;6197:263;;:::o;685:119:3:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:3;;;;;;;;685:119;:::o;810:127::-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:3;;;;;;;;810:127;:::o;786:162:2:-;858:4;-1:-1:-1;;;;;882:21:2;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:2;:11;:20;;;;;;;;;;;;;;;786:162::o;259:181::-;-1:-1:-1;;;;;335:21:2;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:2;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:2;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:2;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;-1:-1:-1;;;;;663:20:2;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:2;;;514:184::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./ERC20.sol\";\nimport \"../../access/roles/MinterRole.sol\";\n\n/**\n * @title ERC20Mintable\n * @dev ERC20 minting logic\n */\ncontract ERC20Mintable is ERC20, MinterRole {\n    /**\n     * @dev Function to mint tokens\n     * @param to The address that will receive the minted tokens.\n     * @param value The amount of tokens to mint.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function mint(address to, uint256 value) public onlyMinter returns (bool) {\n        _mint(to, value);\n        return true;\n    }\n}\n",
  "sourcePath": "D:\\code\\enerZToken\\node_modules\\openzeppelin-solidity\\contracts\\token\\ERC20\\ERC20Mintable.sol",
  "ast": {
    "absolutePath": "/D/code/enerZToken/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
    "exportedSymbols": {
      "ERC20Mintable": [
        1165
      ]
    },
    "id": 1166,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1139,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "/D/code/enerZToken/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 1140,
        "nodeType": "ImportDirective",
        "scope": 1166,
        "sourceUnit": 1049,
        "src": "25:21:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/code/enerZToken/node_modules/openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 1141,
        "nodeType": "ImportDirective",
        "scope": 1166,
        "sourceUnit": 303,
        "src": "47:43:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1142,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1048,
              "src": "178:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1048",
                "typeString": "contract ERC20"
              }
            },
            "id": 1143,
            "nodeType": "InheritanceSpecifier",
            "src": "178:5:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1144,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 302,
              "src": "185:10:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$302",
                "typeString": "contract MinterRole"
              }
            },
            "id": 1145,
            "nodeType": "InheritanceSpecifier",
            "src": "185:10:10"
          }
        ],
        "contractDependencies": [
          302,
          1048,
          1336
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Mintable\n@dev ERC20 minting logic",
        "fullyImplemented": true,
        "id": 1165,
        "linearizedBaseContracts": [
          1165,
          302,
          1048,
          1336
        ],
        "name": "ERC20Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1163,
              "nodeType": "Block",
              "src": "517:54:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1157,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "533:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1158,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "537:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1156,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 963,
                      "src": "527:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "527:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1160,
                  "nodeType": "ExpressionStatement",
                  "src": "527:16:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "560:4:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1155,
                  "id": 1162,
                  "nodeType": "Return",
                  "src": "553:11:10"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 1164,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1152,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1151,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 235,
                  "src": "491:10:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "491:10:10"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1147,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "457:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1149,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "469:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "456:27:10"
            },
            "returnParameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1154,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "511:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "510:6:10"
            },
            "scope": 1165,
            "src": "443:128:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1166,
        "src": "152:421:10"
      }
    ],
    "src": "0:574:10"
  },
  "legacyAST": {
    "absolutePath": "/D/code/enerZToken/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
    "exportedSymbols": {
      "ERC20Mintable": [
        1165
      ]
    },
    "id": 1166,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1139,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "/D/code/enerZToken/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 1140,
        "nodeType": "ImportDirective",
        "scope": 1166,
        "sourceUnit": 1049,
        "src": "25:21:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/code/enerZToken/node_modules/openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 1141,
        "nodeType": "ImportDirective",
        "scope": 1166,
        "sourceUnit": 303,
        "src": "47:43:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1142,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1048,
              "src": "178:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1048",
                "typeString": "contract ERC20"
              }
            },
            "id": 1143,
            "nodeType": "InheritanceSpecifier",
            "src": "178:5:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1144,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 302,
              "src": "185:10:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$302",
                "typeString": "contract MinterRole"
              }
            },
            "id": 1145,
            "nodeType": "InheritanceSpecifier",
            "src": "185:10:10"
          }
        ],
        "contractDependencies": [
          302,
          1048,
          1336
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Mintable\n@dev ERC20 minting logic",
        "fullyImplemented": true,
        "id": 1165,
        "linearizedBaseContracts": [
          1165,
          302,
          1048,
          1336
        ],
        "name": "ERC20Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1163,
              "nodeType": "Block",
              "src": "517:54:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1157,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "533:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1158,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "537:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1156,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 963,
                      "src": "527:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "527:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1160,
                  "nodeType": "ExpressionStatement",
                  "src": "527:16:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "560:4:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1155,
                  "id": 1162,
                  "nodeType": "Return",
                  "src": "553:11:10"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 1164,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1152,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1151,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 235,
                  "src": "491:10:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "491:10:10"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1147,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "457:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1149,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "469:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "456:27:10"
            },
            "returnParameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1154,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "511:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "510:6:10"
            },
            "scope": 1165,
            "src": "443:128:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1166,
        "src": "152:421:10"
      }
    ],
    "src": "0:574:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-02-11T11:00:23.920Z",
  "devdoc": {
    "details": "ERC20 minting logic",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    },
    "title": "ERC20Mintable"
  },
  "userdoc": {
    "methods": {}
  }
}